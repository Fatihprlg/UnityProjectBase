%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: d3b9290b04bb5434f8f7031419260349, type: 3}
  m_Name: Currency Manager
  m_EditorClassIdentifier: 
  moduleName: Currency Manager
  shortDescription: 'The ''Currency Manager'' is a class that manages monetization,
    throttling, and displays these events. It uses the ''Player Data Model'' class
    to save and permanently store this information. Currency changes can be managed
    using the ''UpdateCurrency(int amount)'', ''UpdateCurrencySmooth(int amount)'',
    and ''DecreaseCurrency(int amount)'' methods. '
  fullDescription: The 'Currency Manager' is a class that manages monetization, throttling,
    and displays these events. It uses the 'Player Data Model' class to save and
    permanently store this information. Currency changes can be managed using the
    'UpdateCurrency(int amount)', 'UpdateCurrencySmooth(int amount)', and 'DecreaseCurrency(int
    amount)' methods. Events that should occur during these currency exchanges can
    be added to the 'OnCurrencyUpdate' event listener. Additionally, the 'Currency
    Manager' uses the 'Observer' design pattern. The 'notify' method can be used
    in 'currency update' events by adding 'Observer' objects to this list in 'Initialize'.
    For example, 'CurrencyViewModel' objects subscribe to this item, monitor the
    changes, and reflect them on the screen.
  subPages: []
  images: []
